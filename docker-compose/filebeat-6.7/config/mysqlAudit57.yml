- type: log
  paths:
    - /var/log/2019-04-15_101443mysql-new.txt
  close_inactive: 30m
  close_removed: true
  clean_removed: true
  #multiline.pattern: '^{'
  #multiline.negate: true
  #multiline.match: after
  #json.keys_under_root: true # 默认这个值是FALSE的，也就是我们的json日志解析后会被放在json键上。设为TRUE，所有的keys就会被放到根节点。
  #json.overwrite_keys: true #是否要覆盖原有的key，这是关键配置，将keys_under_root设为TRUE后，再将overwrite_keys也设为TRUE，就能把filebeat默认的key值给覆盖了。
  #json.add_error_key: true
  #json.message_key: audit_record # 解析后的json放到哪个key下
  max_depth: 2 # 解码深度 设置为2
  fields:
    dbtype: mysql5.7
  fields_under_root: true # 上面的字段放到根上
  processors:
    - decode_json_fields:
        fields: ['message'] #要进行解析的字段
        target: "" #json内容解析到指定的字段，如果为空（“”），则解析到顶级结构下
        overwrite_keys: true #如果解析出的json结构中某个字段在原始的event（在filebeat中传输的一条数据为一个event）中也存在，是否覆盖event中该字段的值，默认值:false
        process_array: false #数组是否解码，默认值:false
        max_depth: 3 #解码深度，默认值：1
  # 收集完日志再解析，message字段。 默认收集的内容都在message字段
  
